
/* .lw-power-button */

.lw-power-button {
    padding: 0px;
    border-radius: 100%;
    display: inline-block;
    width: var(--lw-power-button-default-width);
    height: var(--lw-power-button-default-width);
}

    .lw-power-button[focus] {
        outline: none;
    }

    .lw-power-button .lw-input {
        border-radius: 100%;
    }

    .lw-power-button .lw-input,
    .lw-power-button[focus] .lw-input {
        outline: none;
    }

    .lw-power-button .lw-container,
    :host(lw-power-button) .lw-container {
        cursor: pointer;
        height: 100%;
        position: relative;
        display: flex;
    }

    .lw-power-button[disabled] .lw-container,
    .lw-power-button[disabled] .lw-container {
        cursor: initial;
    }

    .lw-power-button .lw-input {
        width: 100%;
        height: 100%;
        min-width: var(--lw-power-button-default-width);
        min-height: var(--lw-power-button-default-width);
        background-color: var(--lw-background);
        border-style: solid;
        box-sizing: border-box;
        border-width: var(--lw-border-width);
        border-color: var(--lw-border);
        display: block;
        position: relative;
        overflow: hidden;
    }

    .lw-power-button[focus] .lw-input {
        border: var(--lw-border-width) solid var(--lw-ui-state-border-focus);
        background: var(--lw-ui-state-focus);
        color: var(--lw-ui-state-color-focus);
    }

    .lw-power-button:hover .lw-input {
        border: var(--lw-border-width) solid var(--lw-ui-state-border-hover);
        background: var(--lw-ui-state-hover);
        color: var(--lw-ui-state-color-hover);
        transition: background-color 100ms linear;
    }

    .lw-power-button:active .lw-input,
    lw-power-button.active .lw-input {
        border: var(--lw-border-width) solid var(--lw-ui-state-border-active);
        background: var(--lw-ui-state-active);
        color: var(--lw-ui-state-color-active);
        transition: background-color 100ms linear;
    }

    .lw-power-button .lw-input {
        background-color: var(--lw-background);
    }

    .lw-power-button[checked] .lw-input {
        background-color: var(--lw-primary);
        color: var(--lw-primary);
    }

lw-power-button.raised {
    box-shadow: var(--lw-elevation-2);
}

.lw-power-button .lw-input:after {
    content: var(--lw-icon-power);
    width: 100%;
    height: 100%;
    font-family: "lw-icons";
    font-style: normal;
    font-weight: normal;
    font-size: 20px;
    display: inline-block;
    text-decoration: inherit;
    font-variant: normal;
    text-transform: none;
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    justify-content: center;
}

.lw-power-button[checked] .lw-input:after {
    color: white;
}

.lw-power-button .lw-animation {
    pointer-events: none;
}

.lw-power-button[readonly]:active .lw-input,
.lw-power-button[readonly].active .lw-input,
.lw-power-button[readonly]:hover .lw-input {
    color: initial;
    border: var(--lw-border-width) solid var(--lw-button-border);
    background: var(--lw-button-background);
    transition: none;
}

lw-power-button[right-to-left] > .lw-container > .lw-input {
    direction: rtl;
}
